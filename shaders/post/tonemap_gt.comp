#version 450

layout(set = 0, binding = 0, rgba16) uniform image2D hdrImage;

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(push_constant) uniform imageInfo {
	vec2 resolution;
};

void main() {
	vec4 inCol = imageLoad(hdrImage, ivec2(gl_GlobalInvocationID.xy));
	vec3 hdr = inCol.rgb;

	// TODO: Adjusting these consts via push constants would be useful
    const vec3 P = vec3(1.00);
	const vec3 a = vec3(1.00);
	const vec3 m = vec3(0.22);
	const vec3 l = vec3(0.40);
	const vec3 c = vec3(1.33);
	const vec3 b = vec3(0.00);
    
    vec3 l0 = ((P - m) * l) / a;
    vec3 L0 = m - m / a;
    vec3 L1 = m + (1.0 - m) / a;
    vec3 S0 = m + l0;
    vec3 S1 = m + a * l0;
    vec3 C2 = (a * P) / (P - S1);
    vec3 CP = -C2 / P;

    vec3 w0 = 1.0 - smoothstep(vec3(0.0), m, hdr);
    vec3 w2 = step(m + l0, hdr);
    vec3 w1 = 1.0 - w0 - w2;

    vec3 T = m * pow(hdr / m, c) + b;
    vec3 S = P - (P - S1) * exp(CP * (hdr - S0));
    vec3 L = m + a * (hdr - m);

    vec3 ldr = T * w0 + L * w1 + S * w2;

	imageStore(hdrImage, ivec2(gl_GlobalInvocationID.xy), vec4(ldr, inCol.a));
}